{"version":3,"sources":["components/Form.js","components/Football.js","components/DisplayLogo.js","components/Error.js","components/Navigation.js","components/NextMatch.js","components/WhenHePlays.js","components/Routing.js","serviceWorker.js","index.js"],"names":["Form","props","react_default","a","createElement","Fragment","onClick","click","Football","id","name","src","concat","image","alt","error","String","DisplayLogo","state","handleButtonClick","e","preventDefault","fetch","headers","X-Auth-Token","then","res","ok","Error","status","json","data","random","Math","floor","_this","setState","teams","crestUrl","catch","err","className","src_components_Form","this","src_components_Football","Component","Navigation","NavLink","exact","to","activeClassName","NextMatch","date","Date","toLocaleString","value","homeTeam","awayTeam","WhenHePlays","handleChange","target","setTimeout","handleNextMatch","API","_data$matches$","matches","utcDate","console","log","_this$state","onChange","components_NextMatch","Routing","BrowserRouter","src_components_Navigation","Switch","Route","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_components_Routing","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+WAYeA,SARF,SAAAC,GACT,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,UAAQE,QAASL,EAAMM,OAAvB,kBCOGC,SAVE,SAAAP,GACb,OACIC,EAAAC,EAAAC,cAAA,OAAKK,GAAG,QACJP,EAAAC,EAAAC,cAAA,OAAKK,GAAG,QAAQR,EAAMS,MACtBR,EAAAC,EAAAC,cAAA,OAAKO,IAAG,GAAAC,OAAKX,EAAMY,OAASC,IAAI,KAChCZ,EAAAC,EAAAC,cAAA,WAAMH,EAAMc,MAAQC,OAAOf,EAAMc,OAAQ,SCiDtCE,oNApDbC,MAAQ,CACNH,MAAO,GACPL,KAAM,GACNG,MAAO,MAETM,kBAAoB,SAAAC,GAClBA,EAAEC,iBAGFC,MAFY,2DAED,CACTC,QAAQ,CAENC,eAAgB,sCAGjBC,KAAK,SAAAC,GACJ,GAAGA,EAAIC,GACL,OAAOD,EAET,MAAME,MAAM,8CAA4BF,EAAIG,UAE7CJ,KAAK,SAAAC,GAAG,OAAIA,EAAII,SAChBL,KAAK,SAAAM,GAEJ,IAAMC,EAASC,KAAKC,MAAoB,GAAdD,KAAKD,UAC/BG,EAAKC,SAAS,CACZrB,MAAO,GACPL,KAAMqB,EAAKM,MAAML,GAAQtB,KACzBG,MAAOkB,EAAKM,MAAML,GAAQM,aAG7BC,MAAM,SAAAC,GACLL,EAAKC,SAAS,CACZrB,MAAOyB,+EAKb,OACEtC,EAAAC,EAAAC,cAAA,OAAKqC,UAAU,OACbvC,EAAAC,EAAAC,cAACsC,EAAD,CACAnC,MAAOoC,KAAKxB,oBAEZjB,EAAAC,EAAAC,cAACwC,EAAD,CACAlC,KAAMiC,KAAKzB,MAAMR,KACjBG,MAAO8B,KAAKzB,MAAML,MAClBE,MAAO4B,KAAKzB,MAAMH,gBA/CA8B,sCCKXjB,EARD,WACV,OACI1B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,yDCaG0C,EAbI,WACf,OACI5C,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAASC,OAAK,EAACC,GAAG,IAAIC,gBAAgB,WAAWT,UAAU,QAA3D,iBAEJvC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAC2C,EAAA,EAAD,CAASE,GAAG,QAAQC,gBAAgB,WAAWT,UAAU,QAAzD,yBCUDU,SApBG,SAAAlD,GACd,IAAMmD,EAAO,IAAIC,KAAKpD,EAAMmD,MAAME,iBAClC,OACIpD,EAAAC,EAAAC,cAAA,WACKH,EAAMsD,MACHrD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UAAKH,EAAMuD,SAAX,QAA0BvD,EAAMwD,UAChCvD,EAAAC,EAAAC,cAAA,mBAAWgD,IAEf,MCkEDM,6MAzEXxC,MAAQ,CACJqC,MAAO,GACPC,SAAU,GACVC,SAAU,GACVL,KAAM,MAEVO,aAAe,SAAAvC,GAEXe,EAAKC,SAAS,CACVmB,MAAOnC,EAAEwC,OAAOL,QAEpBM,WAAW1B,EAAK2B,gBAAiB,MAErCA,gBAAkB,WAKd,IAAMC,EAAG,0CAAAnD,OAA6CuB,EAAKjB,MAAMqC,MAAxD,6BAETjC,MAAMyC,EAAK,CACPxC,QAAQ,CAEJC,eAAgB,sCAGnBC,KAAK,SAAAC,GACF,GAAGA,EAAIC,GACP,OAAOD,EAEP,MAAME,MAAM,8CAA4BF,EAAIG,UAE/CJ,KAAK,SAAAC,GAAG,OAAIA,EAAII,SAChBL,KAAK,SAAAM,GAAQ,IAAAiC,EAC4BjC,EAAKkC,QAAQ,GAA5CT,EADGQ,EACHR,SAAUC,EADPO,EACOP,SAAUS,EADjBF,EACiBE,QAC3B/B,EAAKC,SAAS,CACVoB,SAAUA,EAAS9C,KACnB+C,SAAUA,EAAS/C,KACnB0C,KAAMc,MAGb3B,MAAM,SAAAC,GACHL,EAAKC,SAAS,CACdrB,MAAOyB,IAEP2B,QAAQC,IAAI,iBAAmB5B,8EAGlC,IAAA6B,EAC8B1B,KAAKzB,MAAjCsC,EADFa,EACEb,SAAUC,EADZY,EACYZ,SAAUL,EADtBiB,EACsBjB,KAC3B,OACIlD,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,UACAkE,SAAU3B,KAAKgB,aACfJ,MAAOZ,KAAKzB,MAAMqC,OAEdrD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,IAAd,qBACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,KAAd,sBACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,OAAd,gBACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,MAAd,yBACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,OAAd,mBACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,OAAd,iBACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,KAAd,wBACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,OAAd,iBACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,OAAd,kBACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,QAAd,SAEJrD,EAAAC,EAAAC,cAACmE,EAAD,CAAWhB,MAAQZ,KAAKzB,MAAMqC,MAAOC,SAAUA,EAAUC,SAAUA,EAAUL,KAAMA,YApEzEP,aCmBX2B,EAfC,WACd,OACEtE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,KACEvE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACsE,EAAD,MACAxE,EAAAC,EAAAC,cAACuE,EAAA,EAAD,KACEzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAO5B,OAAK,EAAC6B,KAAK,IAAIC,UAAW7D,IACjCf,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAOC,KAAK,QAAQC,UAAWpB,IAC/BxD,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAOE,UAAWlD,QCJRmD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOnF,EAAAC,EAAAC,cAACkF,EAAD,MAAaC,SAASC,eAAe,SD2H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlE,KAAK,SAAAmE,GACjCA,EAAaC","file":"static/js/main.5488c070.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Form.css'\r\n\r\n//function component for drawing the team from German Bundesliga\r\nconst Form = props => {\r\n    return (\r\n        <>                            \r\n            <button onClick={props.click}>Draw a team</button>                       \r\n        </>\r\n     );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport './Football.css';\r\n\r\n//function component for displaying data\r\nconst Football = props => {\r\n    return (        \r\n        <div id=\"club\"> \r\n            <div id=\"name\">{props.name}</div>\r\n            <img src={`${props.image}`} alt=\"\"/>\r\n            <div>{props.error ? String(props.error): null}</div>   \r\n        </div>\r\n     );\r\n}\r\n\r\nexport default Football;","import React, { Component } from 'react';\r\nimport Form from './Form'\r\nimport Football from './Football'\r\nimport './DisplayLogo.css'\r\n\r\nclass DisplayLogo extends Component {\r\n  state = {\r\n    error: '', \r\n    name: '', \r\n    image: ''\r\n  } \r\n  handleButtonClick = e => {\r\n    e.preventDefault();\r\n    const API = 'https://api.football-data.org/v2/competitions/2002/teams'\r\n\r\n    fetch(API, {\r\n      headers:{\r\n        //my personal key to this API\r\n        'X-Auth-Token': '8cf26ca4deb64429900d6be7f0576025'\r\n      }\r\n    })\r\n      .then(res => {\r\n        if(res.ok) {\r\n          return res;\r\n        }\r\n        throw Error(\"Nie udało się: Błąd nr \" + res.status)\r\n      })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        //Drawing a random number from range 0-17, because there are 18 teams in German Bundesliga and we start counting from 0\r\n        const random = Math.floor(Math.random()*18)\r\n        this.setState({\r\n          error: '',\r\n          name: data.teams[random].name,\r\n          image: data.teams[random].crestUrl\r\n        })\r\n      })\r\n      .catch(err => {\r\n        this.setState({\r\n          error: err\r\n        })\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Form \r\n        click={this.handleButtonClick}     \r\n        />\r\n        <Football \r\n        name={this.state.name}\r\n        image={this.state.image}\r\n        error={this.state.error}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DisplayLogo;\r\n","import React from 'react';\r\n\r\nconst Error = () => {\r\n    return ( \r\n        <div>\r\n            <p>Error: Path does not exist</p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Error;","import React from 'react';\r\nimport './Navigation.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\n\r\nconst Navigation = () => {\r\n    return ( \r\n        <div>\r\n            <button>\r\n                <NavLink exact to=\"/\" activeClassName=\"selected\" className=\"link\">Display Logo</NavLink>\r\n            </button>\r\n            <button>\r\n                <NavLink to=\"/when\" activeClassName=\"selected\" className=\"link\">When Does He Play?</NavLink>\r\n            </button>            \r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Navigation;","import React from 'react';\r\n\r\nconst NextMatch = props => {\r\n    const date = new Date(props.date).toLocaleString();\r\n    return ( \r\n        <div>\r\n            {props.value ? (\r\n                <>\r\n                    <h3>Next game:</h3>\r\n                    <h4>{props.homeTeam} vs. {props.awayTeam}</h4>\r\n                    <h4>Date: {date}</h4>\r\n                </>\r\n            ) : ''}\r\n        </div>\r\n        // <div>\r\n        //     <h3>Next game:</h3>\r\n        //     <h4>{props.homeTeam} vs. {props.awayTeam}</h4>\r\n        //     <h4>Date: {props.date}</h4>\r\n        // </div>\r\n     );\r\n}\r\n \r\nexport default NextMatch;","import React, { Component } from 'react';\r\nimport './WhenHePlays.css'\r\nimport NextMatch from './NextMatch'\r\n\r\nclass WhenHePlays extends Component {\r\n    state = { \r\n        value: '', \r\n        homeTeam: '',\r\n        awayTeam: '',\r\n        date: '', \r\n    }\r\n    handleChange = e => {\r\n        // if(this.state.value)\r\n        this.setState({\r\n            value: e.target.value\r\n        });\r\n        setTimeout(this.handleNextMatch, 1)\r\n    }\r\n    handleNextMatch = () => {   \r\n        //Download from API the the next match         \r\n        // const API = `https://api.football-data.org/v2/competitions/2017/teams`\r\n        \r\n        //downloading the array of future matches of the team\r\n        const API = `https://api.football-data.org/v2/teams/${this.state.value}/matches?status=SCHEDULED`\r\n\r\n        fetch(API, {\r\n            headers:{\r\n                //my personal key to this API\r\n                'X-Auth-Token': '8cf26ca4deb64429900d6be7f0576025'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if(res.ok) {\r\n                return res;\r\n                }\r\n                throw Error(\"Nie udało się: Błąd nr \" + res.status)\r\n            })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                const {homeTeam, awayTeam, utcDate} = data.matches[0];\r\n                this.setState({\r\n                    homeTeam: homeTeam.name,\r\n                    awayTeam: awayTeam.name,\r\n                    date: utcDate\r\n                })                \r\n            })\r\n            .catch(err => {\r\n                this.setState({\r\n                error: err\r\n                })\r\n                console.log(\"Error number: \" + err)\r\n            })\r\n    }\r\n    render() { \r\n        const {homeTeam, awayTeam, date} = this.state\r\n        return ( \r\n            <form>                \r\n                <select \r\n                onChange={this.handleChange}\r\n                value={this.state.value}\r\n                >\t                \r\n                    <option value=''>Choose the player</option>\r\n                    <option value='5'>Robert Lewandowski</option>\r\n                    <option value='340'>Jan Bednarek</option>\r\n                    <option value='98'>Krzysztof Piątek</option>\r\n                    <option value='113'>Arkadiusz Milik</option>\r\n                    <option value='584'>Karol Linetty</option>                    \r\n                    <option value='4'>Łukasz Piszczek</option>                    \r\n                    <option value='341'>Mateusz Klich</option>                    \r\n                    <option value='322'>Kamil Grosicki</option>                    \r\n                    <option value='5620'>Toze</option>                    \r\n                </select>                  \r\n                <NextMatch value ={this.state.value} homeTeam={homeTeam} awayTeam={awayTeam} date={date}/>\r\n            </form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default WhenHePlays;","import React from 'react';\nimport './Routing.css'\nimport DisplayLogo from './DisplayLogo'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom'\nimport Error from './Error'\nimport Navigation from './Navigation'\nimport WhenHePlays from './WhenHePlays'\n\nconst Routing = () => {\n  return ( \n    <Router>\n      <>\n        <Navigation />\n        <Switch>\n          <Route exact path=\"/\" component={DisplayLogo} />\n          <Route path=\"/when\" component={WhenHePlays} />\n          <Route component={Error} />\n        </Switch>  \n      </>          \n    </Router>\n   );\n}\n \nexport default Routing;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routing from './components/Routing';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Routing />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}